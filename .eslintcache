[{"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\index.js":"1","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\App.js":"2","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\reportWebVitals.js":"3","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Pages\\FirstPage\\First.js":"4","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\Left\\Left.js":"5","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\Right\\Right.js":"6","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\Form\\Form.js":"7","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Pages\\SecondPage\\Second.js":"8","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\LeftSec\\LeftSec.js":"9","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\RightSec\\RightSec.js":"10","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\FormSec\\FormSec.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":494,"mtime":1609791853868,"results":"14","hashOfConfig":"13"},{"size":364,"mtime":1609701052867,"results":"15","hashOfConfig":"13"},{"size":294,"mtime":1609789090035,"results":"16","hashOfConfig":"13"},{"size":696,"mtime":1609705844914,"results":"17","hashOfConfig":"13"},{"size":496,"mtime":1609789150412,"results":"18","hashOfConfig":"13"},{"size":3059,"mtime":1609794492744,"results":"19","hashOfConfig":"13"},{"size":321,"mtime":1609791926161,"results":"20","hashOfConfig":"13"},{"size":744,"mtime":1609792472645,"results":"21","hashOfConfig":"13"},{"size":703,"mtime":1609791953185,"results":"22","hashOfConfig":"13"},{"size":3800,"mtime":1609791142901,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1riu4hc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\index.js",[],["49","50"],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\App.js",["51","52","53","54","55"],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\reportWebVitals.js",[],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Pages\\FirstPage\\First.js",[],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\Left\\Left.js",["56","57","58"],"import './Left.css';\nimport Group from '../imgs/Group.png';\nimport quotes from '../imgs/quotes.png';\nimport joy from '../imgs/joy.png';\n\nexport default function Left() {\n  return (\n    <div className=\"Left\">\n      <img src={Group} className=\"logo\"></img>\n      <div className=\"quote\">\n        <img src={quotes}></img>\n        <p className=\"quotep1\">\n          I always observe the people who pass by when I ride an escalator. I'll\n          never see most of them again, so I imagine a lot of things about their\n          lives... about the day ahead of them.\n        </p>\n        <p className=\"quotep2\">Hideo Kojima</p>\n      </div>\n      <img src={joy} className=\"joy\"></img>\n    </div>\n  );\n}\n","C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\Right\\Right.js",["59","60"],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\Form\\Form.js",["61","62","63","64"],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Pages\\SecondPage\\Second.js",[],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\LeftSec\\LeftSec.js",["65","66","67"],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\RightSec\\RightSec.js",["68"],"C:\\Users\\Msys\\Desktop\\GSG Projects\\sign\\src\\Components\\FormSec\\FormSec.js",["69","70"],"import './FormSec.css';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport or from '../imgs/or.png';\n\nlet schema = yup.object().shape({\n  RegisterEmail: yup.string().email().required(),\n  RegisterPassword: yup.string().required().min(8),\n  ConfirmPassword: yup.string().required(),\n});\n\nconst initialError = {\n  RegisterEmail: '',\n  RegisterPassword: '',\n  ConfirmPassword: '',\n};\n\nexport default function FormSec() {\n  const [RegisterEmail, SetRegisterEmail] = useState('');\n  const [RegisterPassword, SetRegisterPassword] = useState('');\n  const [ConfirmPassword, SetConfirmPassword] = useState('');\n  //check box\n  const [Error, SetError] = useState(initialError);\n\n  const [submitted, setSubmitted] = useState(false);\n  const data = { RegisterEmail, RegisterPassword, ConfirmPassword };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    schema\n      .validate(data, { abortEarly: false })\n      .then((valid) => {\n        console.log(valid);\n        if (valid) {\n          //store info\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        console.dir(err);\n        const newErrors = err.inner.reduce((acc, curr) => {\n          acc[curr.path] = curr.message;\n          return acc;\n        }, {});\n        SetError(newErrors);\n      });\n  };\n\n  const Setters = {\n    RegisterEmail: SetRegisterEmail,\n    RegisterPassword: SetRegisterPassword,\n    ConfirmPassword: SetConfirmPassword,\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    Setters[name](value);\n  };\n\n  useEffect(() => {\n    if (submitted) {\n      schema\n        .validate(data, { abortEarly: false })\n        .then((valid) => {\n          console.log(valid);\n          if (valid) {\n            //store info\n          } else {\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          console.dir(err);\n          const newErrors = err.inner.reduce((acc, curr) => {\n            acc[curr.path] = curr.message;\n            return acc;\n          }, {});\n          SetError(newErrors);\n        });\n    }\n  }, [RegisterEmail, RegisterPassword, ConfirmPassword]);\n  return (\n    <div className=\"FormSec\">\n      <form onSubmit={handleSubmit}>\n        <label>Email address*</label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter email address\"\n          name=\"RegisterEmail\"\n          value={RegisterEmail}\n          onChange={handleChange}\n        ></input>\n        {Error.RegisterEmail && (\n          <div className=\"error\">{Error.RegisterEmail}</div>\n        )}\n        <label>Create password*</label>\n        <input\n          placeholder=\"Password\"\n          type=\"password\"\n          name=\"RegisterPassword\"\n          value={RegisterPassword}\n          onChange={handleChange}\n        ></input>\n        {Error.RegisterPassword && (\n          <div className=\"error\">{Error.RegisterPassword}</div>\n        )}\n        <label>Repeat Password*</label>\n        <input\n          placeholder=\"Repeat password\"\n          type=\"password\"\n          name=\"ConfirmPassword\"\n          value={ConfirmPassword}\n          onChange={handleChange}\n        ></input>\n        {Error.ConfirmPassword && (\n          <div className=\"error\">{Error.ConfirmPassword}</div>\n        )}\n        <div className=\"checkFlex\">\n          <input\n            type=\"checkbox\"\n            name=\"vehicle1\"\n            value=\"Bike\"\n            required\n            id=\"check\"\n          ></input>\n          <label>I agree to terms & conditions</label>\n        </div>\n        <input\n          type=\"submit\"\n          className=\"submit\"\n          value=\"Register Account\"\n        ></input>\n        <img src={or}></img>\n        <input type=\"submit\" value=\"Login\"></input>\n      </form>\n    </div>\n  );\n}\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":6,"column":20,"nodeType":"77","messageId":"78","endLine":6,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":9},{"ruleId":"75","severity":1,"message":"80","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":8},{"ruleId":"75","severity":1,"message":"81","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":7},{"ruleId":"75","severity":1,"message":"82","line":10,"column":3,"nodeType":"77","messageId":"78","endLine":10,"endColumn":11},{"ruleId":"83","severity":1,"message":"84","line":9,"column":7,"nodeType":"85","endLine":9,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":11,"column":9,"nodeType":"85","endLine":11,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":19,"column":7,"nodeType":"85","endLine":19,"endColumn":38},{"ruleId":"83","severity":1,"message":"84","line":12,"column":7,"nodeType":"85","endLine":12,"endColumn":44},{"ruleId":"83","severity":1,"message":"84","line":13,"column":7,"nodeType":"85","endLine":13,"endColumn":21},{"ruleId":"75","severity":1,"message":"86","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":4,"column":35,"nodeType":"77","messageId":"78","endLine":4,"endColumn":41},{"ruleId":"75","severity":1,"message":"80","line":4,"column":43,"nodeType":"77","messageId":"78","endLine":4,"endColumn":48},{"ruleId":"87","severity":1,"message":"88","line":83,"column":6,"nodeType":"89","endLine":83,"endColumn":23,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":7,"nodeType":"85","endLine":9,"endColumn":50},{"ruleId":"83","severity":1,"message":"84","line":11,"column":9,"nodeType":"85","endLine":11,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":19,"column":7,"nodeType":"85","endLine":19,"endColumn":38},{"ruleId":"83","severity":1,"message":"84","line":21,"column":7,"nodeType":"85","endLine":21,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":83,"column":6,"nodeType":"89","endLine":83,"endColumn":56,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"84","line":135,"column":9,"nodeType":"85","endLine":135,"endColumn":23},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FiEye' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'submitted'. Either include them or remove the dependency array.","ArrayExpression",["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [Email, Password, data, submitted]",{"range":"100","text":"101"},"Update the dependencies array to be: [RegisterEmail, RegisterPassword, ConfirmPassword, submitted, data]",{"range":"102","text":"103"},[2019,2036],"[Email, Password, data, submitted]",[2130,2180],"[RegisterEmail, RegisterPassword, ConfirmPassword, submitted, data]"]